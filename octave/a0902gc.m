%> \file
%> Conjugate gradient algorithm for quadratic problems. Implementation of algorithm 9.2 of \cite Bier06-book
%> 
%> @author Michel Bierlaire
%> @date Sat Apr  5 23:32:26 2014
%> @ingroup Algorithms



%> Applies the conjugate gradient method to solve  \f[\min_x \frac{1}{2} x^T Q x + b^T x\f] where \f$Q \in \mathbb{R}^n\times\mathbb{R}^n \f$ and \f$b \in \mathbb{R}^n\f$.
%> @param Q matrix of size \f$n \times n \f$.
%> @param b vector of size \f$n\f$.
%> @param x0 starting point
%> @return [D, solution] D: matrix gathering all directions generated by the algorithms, solution: optimal solution
function [D, solution] = a0902gc(Q,b,x0)
  n = size(x0,1) ;
  xk = x0 ;
  gk = Q * xk + b ;
  dk = -gk ;
  D = dk ;
  for k=1:n
    xprint = xk ;
    gprint = gk ;
    dprint = dk ;
#    printf("\\texttt{%3d} & \\texttt{%+10.5e} & \\texttt{%+10.5e}& \
#    \\texttt{%+10.5e}",k,xprint(1),gprint(1),dprint(1)) ;
    alphak = - (dk' * gk) / (dk' * Q * dk) ;
    xk = xk + alphak * dk ;
    gkp1 = Q * xk + b ;
    betak = (gkp1' * gkp1) / (gk' * gk) ;
#    printf("& \\texttt{%+10.5e}& \
#    \\texttt{%+10.5e}\\\\\n",alphak,betak) ;
#    for i=2:n
#      printf(" & \\texttt{%+10.5e} & \\texttt{%+10.5e}& \
#      \\texttt{%+10.5e} & & \\\\\n",xprint(i),gprint(i),dprint(i)) ;
#    endfor
    dk = -gkp1 + betak * dk ;
    D = [D  dk] ;
    gk = gkp1 ;
#    printf("%d %f\n",k,norm(gk)) ;
  endfor  
#  for i=1:n
#    printf("\\texttt{%3d} & \\texttt{%+10.5e} & \\texttt{%+10.5e}& \
#    & & \\\\\n",n+1,xk(i),gk(i)) ;
#  endfor  
  solution = xk ;
endfunction
